{"version":3,"sources":["utils.js","Dropdown.js","Header.js","Footer.js","Wallet.js","NewOrder.js","AllOrders.js","MyOrders.js","AllTrades.js","App.js","LoadingContainer.js","index.js"],"names":["getContracts","web3","a","eth","net","getId","networkId","deployedNetwork","Dex","networks","dex","Contract","abi","address","methods","getTokens","call","tokens","tokenContracts","reduce","acc","token","utils","hexToUtf8","ticker","ERC20Abi","tokenAddress","Dropdown","onSelect","activeItem","items","useState","dropdownVisible","setDropdownVisible","className","type","onClick","label","map","item","i","value","href","e","preventDefault","selectItem","Header","user","contracts","selectToken","id","selectedToken","options","Footer","style","color","DIRECTION","Wallet","deposit","withdraw","direction","setDirection","amount","setAmount","htmlFor","disabled","balances","tokenWallet","tokenDex","onSubmit","role","onChange","target","TYPE","SIDE","NewOrder","createMarketOrder","createLimitOrder","side","price","order","setOrder","AllOrders","orders","renderList","colSpan","filled","fromNow","parseInt","date","buy","sell","MyOrders","AllTrades","trades","ResponsiveContainer","width","height","LineChart","data","Line","dataKey","stroke","CartesianGrid","XAxis","tickFormatter","dateStr","Date","getHours","getMinutes","getSeconds","YAxis","renderChart","trade","tradeId","App","accounts","setTokens","undefined","setUser","setOrders","setTrades","listener","setListener","getBalances","account","traderBalances","fromAscii","balanceOf","getOrders","Promise","all","listenToTrades","tradeIds","Set","events","NewTrade","filter","fromBlock","on","newTrade","has","returnValues","add","approve","send","from","useEffect","rawTokens","init","unsubscribe","trader","toLowerCase","LoadingContainer","setWeb3","setAccounts","setContracts","resolve","reject","detectEthereumProvider","provider","request","method","Web3","window","ethereum","error","getAccounts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9febdb8d.chunk.js","sourcesContent":["import Web3 from 'web3';\r\nimport detectEthereumProvider from '@metamask/detect-provider';\r\nimport Dex from './contracts/Dex.json';\r\nimport ERC20Abi from './ERC20Abi.json';\r\n\r\nconst getWeb3 = () =>\r\n  new Promise( async (resolve, reject) => {\r\n    let provider = await detectEthereumProvider();\r\n    if(provider) {\r\n      await provider.request({ method: 'eth_requestAccounts' });\r\n      try {\r\n        const web3 = new Web3(window.ethereum);\r\n        resolve(web3);\r\n      } catch(error) {\r\n        reject(error);\r\n      }\r\n    }\r\n    reject('Install Metamask');\r\n  });\r\n\r\nconst getContracts = async web3 => {\r\n  const networkId = await web3.eth.net.getId();\r\n  const deployedNetwork = Dex.networks[networkId];\r\n  const dex = new web3.eth.Contract(\r\n    Dex.abi,\r\n    deployedNetwork && deployedNetwork.address,\r\n  );\r\n  const tokens = await dex.methods.getTokens().call();\r\n  const tokenContracts = tokens.reduce((acc, token) => ({\r\n    ...acc,\r\n    [web3.utils.hexToUtf8(token.ticker)]: new web3.eth.Contract(\r\n      ERC20Abi,\r\n      token.tokenAddress\r\n    )\r\n  }), {});\r\n  return { dex, ...tokenContracts };\r\n}\r\n\r\nexport { getWeb3, getContracts };","import React, { useState } from 'react';\r\n\r\nfunction Dropdown({onSelect, activeItem, items}) {\r\n  const [dropdownVisible, setDropdownVisible] = useState(false);\r\n\r\n  const selectItem = (e, item) => {\r\n    e.preventDefault();\r\n    setDropdownVisible(!dropdownVisible);\r\n    onSelect(item);\r\n  }\r\n\r\n  return (\r\n    <div className='dropdown ml-3'>\r\n      <button \r\n        className=\"btn btn-secondary dropdown-toggle\" \r\n        type=\"button\" \r\n        onClick={() => setDropdownVisible(!dropdownVisible)}\r\n      >\r\n        {activeItem.label}\r\n      </button>\r\n      <div className={`dropdown-menu ${dropdownVisible ? 'visible' : ''}`}>\r\n        {items && items.map((item, i) => ( \r\n          <a \r\n            className={`dropdown-item ${item.value === activeItem.value ? 'active' : null}`} \r\n            href='#'\r\n            key={i}\r\n            onClick={e => selectItem(e, item.value)}\r\n          >\r\n            {item.label}\r\n          </a>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropdown;","import React from 'react'; \r\nimport Dropdown from './Dropdown.js';\r\n\r\nfunction Header({\r\n  user, \r\n  tokens, \r\n  contracts, \r\n  selectToken}) {\r\n  return (\r\n    <header id=\"header\" className=\"card\">\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-3 flex\">\r\n          <Dropdown \r\n            items={tokens.map((token) => ({\r\n              label: token.ticker,\r\n              value: token\r\n            }))} \r\n            activeItem={{\r\n              label: user.selectedToken.ticker,\r\n              value: user.selectedToken\r\n            }}\r\n            onSelect={selectToken}\r\n          />\r\n        </div>\r\n        <div className=\"col-sm-9\">\r\n          <h1 className=\"header-title\">\r\n            Dex - <span className=\"contract-address\">Contract address: <span className=\"address\">{contracts.dex.options.address}</span></span>\r\n          </h1>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p className=\"text-center\">\r\n    <a style={{color: 'white'}}> email: a.morsalin@gmail.com</a>     & I'm the developer you need.\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\n\r\nconst DIRECTION = {\r\n  WITHDRAW: 'WITHDRAW',\r\n  DEPOSIT: 'DEPOSIT'\r\n};\r\n\r\nfunction Wallet({deposit, withdraw, user}) {\r\n  const [direction, setDirection] = useState(DIRECTION.DEPOSIT);\r\n  const [amount, setAmount] = useState(0);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(direction === DIRECTION.DEPOSIT) {\r\n      deposit(amount);\r\n    } else {\r\n      withdraw(amount);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"wallet\" className=\"card\">\r\n      <h2 className=\"card-title\">Wallet</h2>\r\n      <h3>Token balance for {user.selectedToken.ticker}</h3>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"wallet\" className=\"col-sm-4 col-form-label\">Wallet</label>\r\n        <div className=\"col-sm-8\">\r\n          <input \r\n            className=\"form-control\" \r\n            id=\"wallet\" \r\n            disabled \r\n            value={user.balances.tokenWallet}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row\">\r\n        <label htmlFor=\"contract\" className=\"col-sm-4 col-form-label\">Dex</label>\r\n        <div className=\"col-sm-8\">\r\n          <input \r\n            className=\"form-control\" \r\n            id=\"wallet\" \r\n            disabled \r\n            value={user.balances.tokenDex}\r\n          />\r\n        </div>\r\n      </div>\r\n      <h3>Transfer {user.selectedToken.ticker}</h3>\r\n      <form id=\"transfer\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"direction\" className=\"col-sm-4 col-form-label\">Direction</label>\r\n          <div className=\"col-sm-8\">\r\n            <div id=\"direction\" className=\"btn-group\" role=\"group\">\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${direction === DIRECTION.DEPOSIT ? 'active' : ''}`}\r\n                onClick={() => setDirection(DIRECTION.DEPOSIT)}\r\n              >Deposit</button>\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${direction === DIRECTION.WITHDRAW ? 'active' : ''}`}\r\n                onClick={() => setDirection(DIRECTION.WITHDRAW)}\r\n              >Withdraw</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"amount\" className=\"col-sm-4 col-form-label\">Amount</label>\r\n          <div className=\"col-sm-8\">\r\n            <div className=\"input-group mb-3\">\r\n              <input \r\n                id=\"amount\" \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                onChange={(e) => setAmount(e.target.value)}\r\n              />\r\n              <div className=\"input-group-append\">\r\n                <span className=\"input-group-text\">{user.selectedToken.ticker}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-right\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wallet;","import React, { useState } from 'react';\r\n\r\nconst TYPE = {\r\n  LIMIT: 'LIMIT',\r\n  MARKET: 'MARKET'\r\n};\r\n\r\nconst SIDE = {\r\n  BUY: 0,\r\n  SELL: 1\r\n};\r\n\r\nfunction NewOrder({createMarketOrder, createLimitOrder}) {\r\n  const [order, setOrder] = useState({\r\n    type: TYPE.LIMIT,\r\n    side: SIDE.BUY,\r\n    amount: '',\r\n    price: ''\r\n  });\r\n  \r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if(order.type === TYPE.MARKET) {\r\n      createMarketOrder(order.amount, order.side);\r\n    } else {\r\n      createLimitOrder(order.amount, order.price, order.side);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div id=\"orders\" className=\"card\">\r\n      <h2 className=\"card-title\">New Order</h2>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"type\" className=\"col-sm-4 col-form-label\">Type</label>\r\n          <div className=\"col-sm-8\">\r\n            <div id=\"type\" className=\"btn-group\" role=\"group\">\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${order.type === TYPE.LIMIT ? 'active' : ''}`}\r\n                onClick={() => setOrder(order => ({ ...order, type: TYPE.LIMIT}))}\r\n              >Limit</button>\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${order.type === TYPE.MARKET ? 'active' : ''}`}\r\n                onClick={() => setOrder(order => ({ ...order, type: TYPE.MARKET}))}\r\n              >Market</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label htmlFor=\"side\" className=\"col-sm-4 col-form-label\">Side</label>\r\n          <div className=\"col-sm-8\">\r\n            <div id=\"side\" className=\"btn-group\" role=\"group\">\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${order.side === SIDE.BUY ? 'active' : ''}`}\r\n                onClick={() => setOrder(order => ({ ...order, side:  SIDE.BUY}))}\r\n              >Buy</button>\r\n              <button \r\n                type=\"button\" \r\n                className={`btn btn-secondary ${order.side === SIDE.SELL ? 'active' : ''}`}\r\n                onClick={() => setOrder(order => ({ ...order, side:  SIDE.SELL}))}\r\n              >Sell</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <label className=\"col-sm-4 col-form-label\" htmlFor=\"order-amount\">Amount</label>\r\n          <div className=\"col-sm-8\">\r\n            <input \r\n              type=\"text\" \r\n              className=\"form-control\" \r\n              id=\"order-amount\" \r\n              onChange={({ target: { value }}) => setOrder(order => ({ ...order, amount: value}))}\r\n            />\r\n          </div>\r\n        </div>\r\n        {order.type === TYPE.MARKET ? null :\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-4 col-form-label\" htmlFor=\"order-amount\">Price</label>\r\n            <div className=\"col-sm-8\">\r\n              <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                id=\"order-price\" \r\n                onChange={({ target: { value }}) => setOrder(order => ({ ...order, price: value}))}\r\n              />\r\n            </div>\r\n          </div>\r\n        }\r\n        <div className=\"text-right\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewOrder;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction AllOrders({orders}) {\r\n  const renderList = (orders, side, className) => {\r\n    return (\r\n      <>\r\n        <table className={`table table-striped mb-0 order-list ${className}`}>\r\n          <thead>\r\n            <tr className=\"table-title order-list-title\">\r\n              <th colSpan='3'>{side}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>amount</th>\r\n              <th>price</th>\r\n              <th>date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.amount - order.filled}</td>\r\n                <td>{order.price}</td>\r\n                <td>\r\n                  <Moment fromNow>{parseInt(order.date) * 1000}</Moment>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-title\">All orders</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          {renderList(orders.buy, 'Buy', 'order-list-buy')}\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          {renderList(orders.sell, 'Sell', 'order-list-sell')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllOrders;","import React from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nfunction MyOrders({orders}) {\r\n  const renderList = (orders, side, className) => {\r\n    return (\r\n      <>\r\n        <table className={`table table-striped mb-0 order-list ${className}`}>\r\n          <thead>\r\n            <tr className=\"table-title order-list-title\">\r\n              <th colSpan='3'>{side}</th>\r\n            </tr>\r\n            <tr>\r\n              <th>amount/filled</th>\r\n              <th>price</th>\r\n              <th>date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.id}>\r\n                <td>{order.amount}/{order.filled}</td>\r\n                <td>{order.price}</td>\r\n                <td>\r\n                  <Moment fromNow>{parseInt(order.date) * 1000}</Moment>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"order-list\" className=\"card\">\r\n      <h2 className=\"card-title\">My orders</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-6\">\r\n          {renderList(orders.buy, 'Buy', 'order-list-buy')}\r\n        </div>\r\n        <div className=\"col-sm-6\">\r\n          {renderList(orders.sell, 'Sell', 'order-list-sell')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyOrders;","import React from 'react';\r\nimport Moment from 'react-moment';\r\nimport { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis } from 'recharts';\r\n\r\nfunction AllTrades({trades}) {\r\n  const renderList = (trades, className) => {\r\n    return (\r\n      <>\r\n        <table className={`table table-striped trade-list mb-0 ${className}`}>\r\n          <thead>\r\n            <tr>\r\n              <th>amount</th>\r\n              <th>price</th>\r\n              <th>date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {trades.map((trade) => (\r\n              <tr key={trade.tradeId}>\r\n                <td>{trade.amount}</td>\r\n                <td>{trade.price}</td>\r\n                <td>\r\n                  <Moment fromNow>{parseInt(trade.date) * 1000}</Moment>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const renderChart = (trades) => {\r\n    return (\r\n      <ResponsiveContainer width=\"100%\" height={200}>\r\n      <LineChart data={trades}>\r\n        <Line type=\"monotone\" dataKey=\"price\" stroke=\"#741cd7\" />\r\n        <CartesianGrid stroke=\"#000000\" />\r\n        <XAxis dataKey=\"date\" tickFormatter={dateStr => {\r\n          const date = new Date(parseInt(dateStr) * 1000); \r\n          return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\r\n        }} />\r\n        <YAxis dataKey=\"price\" />\r\n      </LineChart>\r\n      </ResponsiveContainer>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2 className=\"card-title\">All trades</h2>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm-12\">\r\n          {renderChart(trades)}\r\n          {renderList(trades, 'trade-list')}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllTrades;","import React, { useState, useEffect } from \"react\";\nimport Header from './Header.js';\nimport Footer from './Footer.js';\nimport Wallet from './Wallet.js';\nimport NewOrder from './NewOrder.js';\nimport AllOrders from './AllOrders.js';\nimport MyOrders from './MyOrders.js';\nimport AllTrades from './AllTrades.js';\n\nconst SIDE = {\n  BUY: 0,\n  SELL: 1\n};\n\nfunction App({web3, accounts, contracts}) {\n  const [tokens, setTokens] = useState([]);\n  const [user, setUser] = useState({\n    accounts: [],\n    balances: {\n      tokenDex: 0,\n      tokenWallet: 0\n    },\n    selectedToken: undefined\n  });\n  const [orders, setOrders] = useState({\n    buy: [],\n    sell: []\n  });\n  const [trades, setTrades] = useState([]);\n  const [listener, setListener] = useState(undefined);\n\n  const getBalances = async (account, token) => {\n    const tokenDex = await contracts.dex.methods\n      .traderBalances(account, web3.utils.fromAscii(token.ticker))\n      .call();\n    const tokenWallet = await contracts[token.ticker].methods\n      .balanceOf(account)\n      .call();\n    return {tokenDex, tokenWallet};\n  }\n\n  const getOrders = async token => {\n    const orders = await Promise.all([\n      contracts.dex.methods\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.BUY)\n        .call(),\n      contracts.dex.methods\n        .getOrders(web3.utils.fromAscii(token.ticker), SIDE.SELL)\n        .call(),\n    ]);\n    return {buy: orders[0], sell: orders[1]};\n  }\n\n  const listenToTrades = token => {\n    const tradeIds = new Set();\n    setTrades([]);\n    const listener = contracts.dex.events.NewTrade(\n      {\n        filter: {ticker: web3.utils.fromAscii(token.ticker)},\n        fromBlock: 0\n      })\n      .on('data', newTrade => {\n        if(tradeIds.has(newTrade.returnValues.tradeId)) return;\n        tradeIds.add(newTrade.returnValues.tradeId);\n        setTrades(trades => ([...trades, newTrade.returnValues]));\n      });\n    setListener(listener);\n  }\n\n  const selectToken = token => {\n    setUser({...user, selectedToken: token});\n  }\n\n  const deposit = async amount => {\n    await contracts[user.selectedToken.ticker].methods\n      .approve(contracts.dex.options.address, amount)\n      .send({from: user.accounts[0]});\n    await contracts.dex.methods\n      .deposit(amount, web3.utils.fromAscii(user.selectedToken.ticker))\n      .send({from: user.accounts[0]});\n    const balances = await getBalances(\n      user.accounts[0],\n      user.selectedToken\n    );\n    setUser(user => ({ ...user, balances}));\n  }\n\n  const withdraw = async amount => {\n    await contracts.dex.methods\n      .withdraw(\n        amount, \n        web3.utils.fromAscii(user.selectedToken.ticker)\n      )\n      .send({from: user.accounts[0]});\n    const balances = await getBalances(\n      user.accounts[0],\n      user.selectedToken\n    );\n    setUser(user => ({ ...user, balances}));\n  }\n\n  const createMarketOrder = async (amount, side) => {\n    await contracts.dex.methods\n      .createMarketOrder(\n        web3.utils.fromAscii(user.selectedToken.ticker),\n        amount,\n        side\n      )\n      .send({from: user.accounts[0]});\n    const orders = await getOrders(user.selectedToken);\n    setOrders(orders);\n  }\n\n  const createLimitOrder = async (amount, price, side) => {\n    await contracts.dex.methods\n      .createLimitOrder(\n        web3.utils.fromAscii(user.selectedToken.ticker),\n        amount,\n        price,\n        side\n      )\n      .send({from: user.accounts[0]});\n    const orders = await getOrders(user.selectedToken);\n    setOrders(orders);\n  }\n\n  useEffect(() => {\n    const init = async () => {\n      const rawTokens = await contracts.dex.methods.getTokens().call(); \n      const tokens = rawTokens.map(token => ({\n        ...token,\n        ticker: web3.utils.hexToUtf8(token.ticker)\n      }));\n      const [balances, orders] = await Promise.all([\n        getBalances(accounts[0], tokens[0]),\n        getOrders(tokens[0]),\n      ]);\n      listenToTrades(tokens[0])\n      setTokens(tokens);\n      setUser({accounts, balances, selectedToken: tokens[0]});\n      setOrders(orders);\n    }\n    init();\n  }, []);\n\n  useEffect(() => {\n    const init = async () => {\n      const [balances, orders] = await Promise.all([\n        getBalances(\n          user.accounts[0], \n          user.selectedToken\n        ),\n        getOrders(user.selectedToken),\n      ]);\n      listenToTrades(user.selectedToken);\n      setUser(user => ({ ...user, balances}));\n      setOrders(orders);\n    }\n    if(typeof user.selectedToken !== 'undefined') {\n      init();\n    }\n  }, [user.selectedToken], () => {\n    listener.unsubscribe();\n  });\n\n  if(typeof user.selectedToken === 'undefined') {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div id=\"app\">\n      <Header\n        contracts={contracts}\n        tokens={tokens}\n        user={user}\n        selectToken={selectToken}\n      />\n      <main className=\"container-fluid\">\n        <div className=\"row\">\n          <div className=\"col-sm-4 first-col\">\n            <Wallet \n              user={user}\n              deposit={deposit}\n              withdraw={withdraw}\n            />\n            {user.selectedToken.ticker !== 'DAI' ? (\n              <NewOrder \n                createMarketOrder={createMarketOrder}\n                createLimitOrder={createLimitOrder}\n              />\n            ) : null}\n          </div>\n          {user.selectedToken.ticker !== 'DAI' ? (\n            <div className=\"col-sm-8\">\n              <AllTrades \n                trades={trades}\n              />\n              <AllOrders \n                orders={orders}\n              />\n              <MyOrders \n                orders={{\n                  buy: orders.buy.filter(\n                    order => order.trader.toLowerCase() === accounts[0].toLowerCase()\n                  ),\n                  sell: orders.sell.filter(\n                    order => order.trader.toLowerCase() === accounts[0].toLowerCase()\n                  )\n                }}\n              />\n            </div>\n          ) : null}\n        </div>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React, { useState, useEffect } from \"react\";\r\nimport { getWeb3, getContracts } from './utils.js';\r\nimport App from './App.js';\r\n\r\nfunction LoadingContainer() {\r\n  const [web3, setWeb3] = useState(undefined);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const [contracts, setContracts] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    const init = async () => {\r\n      const web3 = await getWeb3();\r\n      const contracts = await getContracts(web3);\r\n      const accounts = await web3.eth.getAccounts();\r\n      setWeb3(web3);\r\n      setContracts(contracts);\r\n      setAccounts(accounts);\r\n    }\r\n    init();\r\n  // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const isReady = () => {\r\n    return (\r\n      typeof web3 !== 'undefined' \r\n      && typeof contracts !== 'undefined'\r\n      && accounts.length > 0\r\n    );\r\n  }\r\n\r\n  if (!isReady()) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <App\r\n      web3={web3}\r\n      accounts={accounts}\r\n      contracts={contracts}\r\n    />\r\n  );\r\n}\r\n\r\nexport default LoadingContainer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './scss/index.scss';\nimport LoadingContainer from './LoadingContainer';\n\nReactDOM.render(<LoadingContainer />, document.getElementById('root'));\n\n"],"sourceRoot":""}